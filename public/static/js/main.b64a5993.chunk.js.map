{"version":3,"sources":["GridComponent.js","Products.jsx","App.js","reportWebVitals.js","index.js"],"names":["GridComponent","productList","products","useState","randomNumbers","Date","relativeTime","date","addedDate","today","days","getUTCFullYear","getDate","getMonth","style","color","marginBottom","Math","trunc","toString","substring","generateRandomNumber","random","floor","includes","push","Grid","container","spacing","map","product","index","item","md","Card","height","padding","textAlign","background","undefined","face","get","fontSize","size","Typography","price","maxWidth","maxHeight","alignContent","class","src","ProductGrid","page","limit","basicURL","loading","isFetching","nextProducts","sort","handleScroll","e","window","innerHeight","document","documentElement","scrollTop","offsetHeight","set","getProducts","setURL","merge","axios","then","response","count","productsWithAd","data","splice","catch","error","console","log","slice","url","URL","searchParams","sortList","sortBy","useEffect","addEventListener","removeEventListener","alignItems","marginLeft","marginTop","CircularProgress","position","top","Button","variant","onClick","marginRight","length","App","className","Products","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b64a5993.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, Card, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"@hookstate/core\";\r\n\r\nconst GridComponent = ({ productList }) => {\r\n  const products = useState(productList);\r\n  const today = new Date();\r\n  const randomNumbers = [];\r\n\r\n  const relativeTime = (date) => {\r\n    const addedDate = new Date(date);\r\n    const today = new Date();\r\n    const days =\r\n      (today.getUTCFullYear() - addedDate.getUTCFullYear()) * 365 +\r\n      (today.getDate() < addedDate.getDate()\r\n        ? (today.getMonth() - 1 - addedDate.getMonth()) * 30 +\r\n          (today.getDate() + 30 - addedDate.getDate())\r\n        : (today.getMonth() - addedDate.getMonth()) * 30 +\r\n          (today.getDate() - addedDate.getDate()));\r\n    return (\r\n      <h4 style={{ color: \"#424242\", marginBottom: \"2px\" }}>\r\n        {days === 0\r\n          ? `product added Today`\r\n          : days >= 365\r\n          ? Math.trunc(days / 365) === 1\r\n            ? `${Math.trunc(days / 365)} year ago`\r\n            : `${Math.trunc(days / 365)} years ago`\r\n          : days <= 7\r\n          ? days === 1\r\n            ? `${days} day ago`\r\n            : `${days} days ago`\r\n          : `${addedDate.toString().substring(3, 16)}`}\r\n      </h4>\r\n    );\r\n  };\r\n\r\n  const generateRandomNumber = () => {\r\n    const random = Math.floor(Math.random() * 1000);\r\n    if (randomNumbers.includes(random)) {\r\n      generateRandomNumber();\r\n    } else {\r\n      randomNumbers.push(random);\r\n      return random;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        {products.map((product, index) => {\r\n          return (\r\n            <>\r\n              <Grid item md={3}>\r\n                <Card\r\n                  style={{\r\n                    height: \"200px\",\r\n                    padding: \"15px\",\r\n                    textAlign: \"center\",\r\n                    background: \"white\",\r\n                    marginBottom: \"8px\",\r\n                  }}\r\n                >\r\n                  {product !== undefined &&\r\n                  product.face.get() !== undefined &&\r\n                  product.face.get() &&\r\n                  product.date.get() ? (\r\n                    <>\r\n                      <h1 style={{ fontSize: `${product.size.get()}px` }}>\r\n                        {product.face.get()}\r\n                      </h1>\r\n                      <Typography style={{ color: \"#BF360C\" }}>{`Price : $ ${\r\n                        product.price.get() / 100\r\n                      }`}</Typography>\r\n                      <p style={{ marginBottom: \"2px !important\" }}>\r\n                        {relativeTime(product.date.get())}\r\n                      </p>\r\n                    </>\r\n                  ) : (\r\n                    <img\r\n                      style={{\r\n                        maxWidth: \"100%\",\r\n                        maxHeight: \"100%\",\r\n                        alignContent: \"center\",\r\n                      }}\r\n                      class=\"ad\"\r\n                      src={`http://localhost:3000/ads/?r=${generateRandomNumber()}`}\r\n                    />\r\n                  )}\r\n                </Card>\r\n              </Grid>\r\n            </>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default GridComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"@hookstate/core\";\r\nimport GridComponent from \"./GridComponent\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst ProductGrid = () => {\r\n  const products = useState([]);\r\n  const page = useState(0);\r\n  const limit = useState(41);\r\n  const basicURL = useState(\"http://localhost:3000/products\");\r\n  const loading = useState(true);\r\n  const isFetching = useState(false);\r\n  const nextProducts = useState([]);\r\n  const sort = useState(\"\");\r\n\r\n  const handleScroll = (e) => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop >\r\n      document.documentElement.offsetHeight - 1\r\n    )\r\n      return;\r\n    isFetching.set(true);\r\n  };\r\n\r\n  const getProducts = () => {\r\n    setURL();\r\n    if (!isFetching.get()) {\r\n      axios\r\n        .get(`${basicURL.get()}`)\r\n        .then((response) => {\r\n          let count = 1;\r\n          const productsWithAd = response.data;\r\n          productsWithAd.map((product, index) => {\r\n            if (index === 21 * count - 1) {\r\n              count += 1;\r\n              productsWithAd.splice(index, 0, {});\r\n            }\r\n          });\r\n          products.set(productsWithAd.slice(0, 21));\r\n          nextProducts.set(productsWithAd.slice(21));\r\n          loading.set(false);\r\n          limit.set(21);\r\n          page.set(2);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      products.merge(nextProducts.get());\r\n      axios\r\n        .get(`${basicURL.get()}`)\r\n        .then((response) => {\r\n          let count = 1;\r\n          const productsWithAd = response.data;\r\n          productsWithAd.map((product, index) => {\r\n            if (index === 21 * count - 1) {\r\n              count += 1;\r\n              productsWithAd.splice(index, 0, {});\r\n            }\r\n          });\r\n          nextProducts.set(productsWithAd);\r\n          page.set(page.get() + 1);\r\n        })\r\n        .catch((error) => console.log(error));\r\n\r\n      isFetching.set(false);\r\n    }\r\n  };\r\n  const setURL = () => {\r\n    let url = new URL(basicURL.get());\r\n    url.searchParams.set(\"_sort\", sort.get());\r\n    url.searchParams.set(\"_page\", page.get());\r\n    url.searchParams.set(\"_limit\", limit.get());\r\n    basicURL.set(url.toString());\r\n  };\r\n\r\n  const sortList = (sortBy) => {\r\n    sort.set(sortBy);\r\n    page.set(0);\r\n    limit.set(41);\r\n    setURL();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [basicURL.get()]);\r\n\r\n  useEffect(() => {\r\n    if (!isFetching.get()) return;\r\n    getProducts();\r\n  }, [isFetching.get()]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ background: \"#EDE7F6\" }}>\r\n      {loading.get() ? (\r\n        <div\r\n          style={{\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginLeft: \"50%\",\r\n            height: \"500px\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          <h1>Loading...</h1>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div style={{ padding: \"10px\" }}>\r\n          <header style={{ position: \"fixed\", top: \"0px\" }}>\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => sortList(\"price\")}\r\n                style={{\r\n                  marginRight: \"15px\",\r\n                  background: \"#7986CB\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                sort by Price\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => sortList(\"size\")}\r\n                style={{\r\n                  marginRight: \"15px\",\r\n                  background: \"#7986CB\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                sort by Size\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => sortList(\"id\")}\r\n                style={{\r\n                  marginRight: \"15px\",\r\n                  background: \"#7986CB\",\r\n                  padding: \"10px\",\r\n                }}\r\n              >\r\n                sort by Id\r\n              </Button>\r\n            </div>\r\n          </header>\r\n          <body style={{ marginTop: \"80px\" }}>\r\n            {products.get().length !== 0 ? (\r\n              <GridComponent productList={products} />\r\n            ) : null}\r\n          </body>\r\n        </div>\r\n      )}\r\n      {isFetching.get() && <p>Fetching more list items...</p>}\r\n    </div>\r\n  );\r\n};\r\nexport default ProductGrid;\r\n","import Products from \"./Products\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Products />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}